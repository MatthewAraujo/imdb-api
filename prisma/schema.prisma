// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  DEVELOPER
  COMPANY
}

enum Availability {
  FREELANCER
  FULL_TIME
  PART_TIME
}

model User {
  id           String     @id @default(uuid())
  publicId     Int        @unique @default(autoincrement()) @map("public_id")
  name         String
  email        String     @unique
  passwordHash String     @map("password_hash")
  role         Role
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")
  Developer    Developer?
  Company      Company?
}

model Developer {
  id              String       @id @default(uuid())
  publicId        Int          @unique @default(autoincrement()) @map("public_id")
  stack           String
  experienceYears Int          @map("experience_years")
  location        String
  availability    Availability
  bio             String
  gitHub          String
  linkedIn        String
  user            User         @relation(fields: [userId], references: [id])
  userId          String       @unique
}

model Company {
  id          String     @id @default(uuid())
  publicId    Int        @unique @default(autoincrement()) @map("public_id")
  companyName String     @map("company_name")
  sector      String
  location    String
  description String
  website     String
  jobOffers   JobOffer[]
  user        User       @relation(fields: [userId], references: [id])
  userId      String     @unique
}

model JobOffer {
  id           String   @id @default(uuid())
  publicId     Int      @unique @default(autoincrement()) @map("public_id")
  title        String
  description  String
  requirements String
  benefits     String
  postedAt     DateTime @default(now())
  company      Company  @relation(fields: [companyId], references: [id])
  companyId    String
}
